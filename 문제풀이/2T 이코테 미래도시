"""
양방향 가중치
1 -> K -> X 최단거리

다익스트라
플로이드 와샬 둘다 가능
-> 플로이드 와샬
"점화식과 3중 포문을 이용한 플로이드 와샬"
"Dab = min(Dab, Dak+Dkb"
"""
N, M = map(int, input().split())
dp = list([int(1e9)]*(N+1) for _ in range(N+1))
for idx in range(1, N+1):
	dp[idx][idx] = 0
for _ in range(M):
	start, end = map(int, input().split())
	dp[start][end] = 1
	dp[end][start] = 1
X, K = map(int, input().split())

for k in range(1, N+1):
	for a in range(1, N+1):
		for b in range(1, N+1):
			dp[a][b] = min(dp[a][b], dp[a][k] + dp[k][b])

if dp[1][K] + dp[K][X] > int(1e9):
	print(-1)
else:
	print(dp[1][K] + dp[K][X])
