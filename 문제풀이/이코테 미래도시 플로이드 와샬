"""
양방향 간선 최단경로
1 -> K / K -> X
다익스트라 O(2*ElogV) = 2 * 100 * 2 = 400
플로이드 와샬 O(V^3) - 100 * 100 * 100
다익스트라가 유리

하지만, 플로이드 와샬로 풀어봄
	플로이드 와샬:
		"점화식을 이용한 플로이드 와샬"
			Dab = min(Dab, Dak+Dkb)
"""

N, M = map(int, input().split())
graph = list([int(1e9)]*(N+1) for _ in range(N+1))
for idx in range(1, N+1):
	graph[idx][idx] = 0
for _ in range(M):
	start, end = map(int, input().split())
	# check point: 양방향 간선
	graph[start][end] = 1
	graph[end][start] = 1

X, K = map(int, input().split())

for k in range(1, N+1):
	for a in range(1, N+1):
		for b in range(1, N+1):
			graph[a][b] = min(graph[a][b], graph[a][k] + graph[k][b])

result_num = graph[1][K] + graph[K][X]
if result_num >= int(1e9):
	print(-1)
else:
	print(result_num)
