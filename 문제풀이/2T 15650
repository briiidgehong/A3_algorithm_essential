"""
1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열
고른 수열은 오름차순이어야 한다.
-> 조합 // dfs 백트래킹
"""
N, M = map(int, input().split())
n_list = list(idx for idx in range(1, N+1))
visited = [False] * (N+1)
combinations = []
def dfs_recur(num_list):
	# 종료조건부터 명시
	if len(num_list) == M:
		combinations.append(num_list)
	for each in n_list:
		if len(num_list) == 0:
			visited[each] = True
			dfs_recur(num_list+[each])
			visited[each] = False
		elif num_list[-1] < each:
			if visited[each] == False:
				visited[each] = True
				dfs_recur(num_list+[each])
				visited[each] = False
dfs_recur([])

for each in combinations:
	for sub_each in each:
		print(sub_each, end=" ")
	print("")

# from itertools import combinations
# print(list(combinations(n_list, M)))

	

