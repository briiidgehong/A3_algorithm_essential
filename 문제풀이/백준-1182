"""
아이디어:
백트래킹 / DFS / recur combinations
"""
N, S = map(int, input().split())
n_list = list(map(int, input().split()))

# 1. recur combinations 풀이
count = 0
def recur(recur_idx, recur_last_idx, recur_sub_list, recur_visited):
	global count
	if recur_idx > 0:
		if sum(recur_sub_list) == S:
			count += 1
	if recur_idx == N:
		return
		
	for idx in range(recur_last_idx+1, N):
		if recur_visited[idx] == False:
			recur_visited[idx] = True
			recur(recur_idx+1, idx, recur_sub_list + [n_list[idx]], recur_visited)
			recur_visited[idx] = False
			
recur(0, -1, [], [False]*N)
print(count)

# # 2. combinations 풀이
# from itertools import combinations

# count = 0
# for idx in range(1, N+1):
# 	comb_list = list(combinations(n_list, idx))
# 	for each in comb_list:
# 		if sum(each) == S:
# 			count += 1
# print(count)
