"""
단방향 가중치, 최단경로
도시들이 모두 메시지를 받는 데까지 걸리는 시간은 얼마인가?
-> 다익스트라
"min_table 과 heapq를 이용한 다익스트라"
"""
N, M, start_node = map(int, input().split())
graph = {}
for idx in range(1, N+1):
	graph[idx] = []
	
for _ in range(M):
	start, end, cost = map(int, input().split())
	graph[start].append((cost, end))

def dij(start):
	import heapq
	min_table = [int(1e9)] * (N+1)
	queue = []
	heapq.heappush(queue, (0, start))
	min_table[start] = 0
	while queue:
		poped_cost, poped_node = heapq.heappop(queue)
		for next_cost, next_node in graph[poped_node]:
			if min_table[next_node] <= poped_cost + next_cost:
				continue
			else:
				min_table[next_node] = poped_cost + next_cost
				heapq.heappush(queue, (poped_cost+next_cost, next_node))
	return min_table
print(dij(start_node))
