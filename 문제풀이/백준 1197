"""
백준 1197 최소 스패닝 트리
최소 스패닝 트리 (MST):
	사이클:
		시작점과 끝이 같은 노드인 형태
	트리 < 그래프:
		트리는 그래프의 특수한 형태
		그래프: 사이클이 존재
		트리: 사이클이 존재하지 않음
	
	스패닝 트리: <<사이클이 없고, 노드가 모두 이어져 있는 그래프>>
	최소 스패닝 트리: 스패닝 트리중 가중치의 합이 가장 작은 스패닝 트리

	즉, 최소스패닝트리란
		사이클이없고, 노드가 모두 이어진, 가중치의 합이 가장 적은 트리
	
	MST 알고리즘
		크루스칼: 
			"union find 사용, 전체 간선 중 작은것부터 연결"
			O(ElogE)
		프림:
			"힙 사용하여, 현재 연결된 트리에 
							이어진 간선중 가장 작은것을 추가"
			O(ElogV)
		
		
"""

V, E = map(int, input().split())

graph = {}
for idx in range(1, V+1):
	graph[idx] = []
	
for _ in range(E):
	start, end, cost = map(int, input().split())
	graph[start].append((cost, end))

MST_cost_sum = 0

# 크루스칼

# 프림

print(MST_cost_sum)
